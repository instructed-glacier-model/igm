# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - reorganize

jobs:
  deploy:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
            python-version: '<3.11'
    # Should integration tests be run here or just assume the user has a working environment?
    # - name: Install CUDA
    #   run: |
    #     ./.github/workflows/install_cuda_ubuntu.sh
    #     nvidia-smi
    # - uses: Jimver/cuda-toolkit@v0.2.11
    #   id: cuda-toolkit
    #   with:
    #     cuda: '12.1.0'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Install package
      run: pip install .
#    - name: Publish package to testpypi
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        password: ${{ secrets.PYPI_API_TOKEN }}
#        repository-url: https://test.pypi.org/legacy/
    - name: Run tests
      run: |
        pip install pytest
        python -c "import os; print(os.getcwd())"
        cd tests
        python -m pytest -W ignore::DeprecationWarning -p no:cacheprovider
  # Not deploying pypi at the moment as I am testing some CI/CD with unit-testing (and its a feature branch anyways...)
    # - name: Publish package to pypi
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.IGM_TOKEN }}
    #     repository-url: https://upload.pypi.org/legacy/
